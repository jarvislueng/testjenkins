<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    <!--
    1.开启SpringMVC注解模式，可以使用@RequestMapping，@PathVariable，@ResponseBody等
    2.对静态资源处理，如js，css，jpg等
    3.配置jsp 显示ViewResolver，例如在controller中某个方法返回一个string类型的"login"，实际上会返回"/WEB-INF/login.jsp"
    4.扫描web层 @Controller
    -->

    <!--配置Springmvc-->
    <!--1.开启springmvc注解模式-->
    <mvc:annotation-driven />


    <!--2.静态资源默认servlet配置
            （1）加入对静态资源的处理：js,gif,png
            (2)允许使用“/”做整体映射
    -->
    <mvc:default-servlet-handler/>


    <!--3.配置jsp显示ViewResolver-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--4.扫描web相关的bean-->
    <context:component-scan base-package="com.jarvis.web"/>

</beans>